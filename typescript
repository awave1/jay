Script started on 2020-03-27 15:28:45-0600
]0;~/code/jay — fish[m¶[m                                                                                                                                                                                                                                                                                                                        ¶ [K[?2004h]0;~/code/jay — fish[m[K[m~/code/jay [msemantic-checking
[m❯[m [Kmake clear[9D[mmake clear[9D[make clear[mke clear[me clear[m[1mmake[m clear[m[K
[m[?2004l]0;jay: make — make[mflex src/scanner.l
bison -t -d src/parser.yy
src/parser.yy: warning: 1 shift/reduce conflict [-Wconflicts-sr]
g++ -Wall -std=c++17  -o jay ./src/main.cpp lex.yy.cc parser.tab.cc src/string_builder.c src/SymTable.cpp src/SemanticAnalyzer.cpp src/JayCompiler.cpp -lfl
¶[m                                                                                                                                                                                                                                                                                                                        ¶ [K
[?2004h]0;~/code/jay — fish[m[K[m~/code/jay [msemantic-checking
[m❯[m [Kmake[mmake[make[mke[me[m[1mmake[m[1m [m clear[mt[Kest_runner COMPONENT=semantic[29D[m[4mt[mest_runner COMPONENT=semantic[29D[m[4me[mst_runner COMPONENT=semantic[28D[m[4ms[mt_runner COMPONENT=semantic[27D[m[4mt[m_runner COMPONENT=semantic[26D[m[4m_[mrunner COMPONENT=semantic[25D[mtest_runner COMPONENT=semantic[25D[mrunner COMPONENT=semantic[24D[munner COMPONENT=semantic[23D[mnner COMPONENT=semantic[22D[mner COMPONENT=semantic[21D[mer COMPONENT=semantic[20D[mr COMPONENT=semantic[19D[m COMPONENT=semantic[18D[m COMPONENT=semantic[18D[mCOMPONENT=semantic[17D[mCOMPONENT=semantic[17D[mOMPONENT=semantic[16D[mMPONENT=semantic[15D[mPONENT=semantic[14D[mONENT=semantic[13D[mNENT=semantic[12D[mENT=semantic[11D[mNT=semantic[10D[mT=semantic[9D[m=semantic[msemantic[memantic[mmantic[mantic[mntic[mtic[mic[mc[m
[m[?2004l]0;jay: make test_runner COMPONENT=semantic — make[m> cleaning build & misc files...
Makefile:69: recipe for target 'clean' failed
make: [clean] Error 1 (ignored)
> done
flex src/scanner.l
bison -t -d src/parser.yy
src/parser.yy: warning: 1 shift/reduce conflict [-Wconflicts-sr]
g++ -Wall -std=c++17  -o jay ./src/main.cpp lex.yy.cc parser.tab.cc src/string_builder.c src/SymTable.cpp src/SemanticAnalyzer.cpp src/JayCompiler.cpp -lfl
./test.sh semantic
running tests...

/home/awave/code/jay/test/semantic/10_no_return_val_in_void.test: AST
[1;31mError: `main()` cannot have `return` statements. Line: 2[0m
[1;31mError: void function `f` cannot return values. Line: 6[0m
[1;31mError: void function `f` cannot return values. Line: 10[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/11_wrong_return_type.test: AST
[1;31mError: Mismatched return type. Was expecting `int`, but got `boolean Line: 4[0m
[1;31mError: Mismatched return type. Was expecting `boolean`, but got `int Line: 7[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/12_if_while_condition_must_be_bool.test: AST
[1;31mError: Invalid boolean expression used in `while` expression. Line: 4[0m
[1;31mError: Invalid boolean expression used in `if` expression. Line: 8[0m
[1;31mError: Invalid boolean expression used in `if... else` expression. Line: 12[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/13_redefined_identifier.test: AST
[1;31mError: `int i`: Duplicated declaration of variables is not allowed. Line: 7[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/14_undefined_identifier.test: AST
[1;31mError: Undefined identifier `glob`. Line: 4[0m
[1;31mError: Unknown identifier `glob`. Line: 4[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/1_no_main_found.test: AST
[1;31mError: No `main()` found. Aborting[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/2_multiple_main_found.test: AST
[1;31mError: Multiple `main()` declarations found. Aborting[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/3_local_decl_not_in_outermost_block.test: AST
[1;31mError: `int j` A local declaration was not in an outermost block. Line: 5[0m
[1;31mError: Unknown identifier `j`. Line: 5[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/4_mismatched_args.test: AST
[1;31mError: Mismatched types in expression. Line: 3[0m
[1;31mError: Mismatched arguments for function `bar`, expected `boolean`, but found `string`. Line: 5[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/5_no_args_for_main.test: AST
filename: /home/awave/code/jay/test/semantic/5_no_args_for_main.test
-----------------------------
Error: syntax error, unexpected T_TYPE_INT, expecting T_SEPARATOR_RPAREN
lineno: 3
Failed parsing
------------------------------------

/home/awave/code/jay/test/semantic/6_no_main_call.test: AST
[1;31mError: Cannot call `main()` function directly. Line: 4[0m
[1;31mError: Cannot call `main()` function directly. Line: 8[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/7_break_only_inside_while.test: AST
[1;31mError: `break` statement can only occur in `while` loops. Line: 9[0m
[1;31mError: `break` statement can only occur in `while` loops. Line: 14[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/8_type_mismatch_for_operators.test: AST
[1;31mError: Mismatched types in expression. Line: 7[0m
[1;31mError: unexpected assignment to variable `bool` of type `boolean`, found type `string Line: 10[0m
[1;31mError: Mismatched types in expression. Line: 11[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/9_missing_return_in_non_void.test: AST
[1;31mError: Missing `return` statement. Line: 7[0m
Failed semantic checking
------------------------------------

/home/awave/code/jay/test/semantic/fib.pass: AST
program {  line: 23 }
.  main_func_decl {  line: 17 }
.  .  void {  line: 17 }
.  .  id { value: 'main' function_name:  line: 3 }
.  .  formal_params {  }
.  .  block { is_while_block: false is_return_block: false line: 17 }
.  .  .  variable_decl {  line: 4 }
.  .  .  .  int {  line: 4 }
.  .  .  .  id { value: 'i' function_name: main line: 4 }
.  .  .  statement_expt {  line: 5 }
.  .  .  .  = {  line: 5 }
.  .  .  .  .  id { value: 'i' function_name: main line: 5 }
.  .  .  .  .  int { value: '0' line: 5 }
.  .  .  while {  line: 16 }
.  .  .  .  <= {  line: 9 }
.  .  .  .  .  id { value: 'i' function_name: main line: 9 }
.  .  .  .  .  int { value: '47' line: 9 }
.  .  .  .  block { is_while_block: true is_return_block: false line: 16 }
.  .  .  .  .  statement_expt {  line: 10 }
.  .  .  .  .  .  function_call {  line: 10 }
.  .  .  .  .  .  .  id { value: 'prints' function_name: main line: 10 }
.  .  .  .  .  .  .  actual_params {  line: 10 }
.  .  .  .  .  .  .  .  string { value: 'fib(' line: 10 }
.  .  .  .  .  statement_expt {  line: 11 }
.  .  .  .  .  .  function_call {  line: 11 }
.  .  .  .  .  .  .  id { value: 'printi' function_name: main line: 11 }
.  .  .  .  .  .  .  actual_params {  line: 11 }
.  .  .  .  .  .  .  .  id { value: 'i' function_name: main line: 11 }
.  .  .  .  .  statement_expt {  line: 12 }
.  .  .  .  .  .  function_call {  line: 12 }
.  .  .  .  .  .  .  id { value: 'prints' function_name: main line: 12 }
.  .  .  .  .  .  .  actual_params {  line: 12 }
.  .  .  .  .  .  .  .  string { value: ') = ' line: 12 }
.  .  .  .  .  statement_expt {  line: 13 }
.  .  .  .  .  .  function_call {  line: 13 }
.  .  .  .  .  .  .  id { value: 'printi' function_name: main line: 13 }
.  .  .  .  .  .  .  actual_params {  line: 13 }
.  .  .  .  .  .  .  .  function_call {  line: 13 }
.  .  .  .  .  .  .  .  .  id { value: 'fib' function_name: main line: 13 }
.  .  .  .  .  .  .  .  .  actual_params {  line: 13 }
.  .  .  .  .  .  .  .  .  .  id { value: 'i' function_name: main line: 13 }
.  .  .  .  .  statement_expt {  line: 14 }
.  .  .  .  .  .  function_call {  line: 14 }
.  .  .  .  .  .  .  id { value: 'prints' function_name: main line: 14 }
.  .  .  .  .  .  .  actual_params {  line: 14 }
.  .  .  .  .  .  .  .  string { value: '\n' line: 14 }
.  .  .  .  .  statement_expt {  line: 15 }
.  .  .  .  .  .  = {  line: 15 }
.  .  .  .  .  .  .  id { value: 'i' function_name: main line: 15 }
.  .  .  .  .  .  .  + {  expected_type: program line: 15 }
.  .  .  .  .  .  .  .  id { value: 'i' function_name: main line: 15 }
.  .  .  .  .  .  .  .  int { value: '1' line: 15 }
.  function_decl {  line: 23 }
.  .  int {  line: 19 }
.  .  id { value: 'fib' function_name:  line: 19 }
.  .  formal_params {  }
.  .  .  formal {  line: 19 }
.  .  .  .  int {  line: 19 }
.  .  .  .  id { value: 'n' function_name: fib line: 19 }
.  .  block { is_while_block: false is_return_block: true line: 23 }
.  .  .  if {  line: 21 }
.  .  .  .  == {  line: 20 }
.  .  .  .  .  id { value: 'n' function_name: fib line: 20 }
.  .  .  .  .  int { value: '0' line: 20 }
.  .  .  .  return {  line: 20 }
.  .  .  .  .  int { value: '0' line: 20 }
.  .  .  if {  line: 22 }
.  .  .  .  == {  line: 21 }
.  .  .  .  .  id { value: 'n' function_name: fib line: 21 }
.  .  .  .  .  int { value: '1' line: 21 }
.  .  .  .  return {  line: 21 }
.  .  .  .  .  int { value: '1' line: 21 }
.  .  .  return {  line: 22 }
.  .  .  .  + {  expected_type: program line: 22 }
.  .  .  .  .  function_call {  line: 22 }
.  .  .  .  .  .  id { value: 'fib' function_name: fib line: 22 }
.  .  .  .  .  .  actual_params {  line: 22 }
.  .  .  .  .  .  .  - {  expected_type: program line: 22 }
.  .  .  .  .  .  .  .  id { value: 'n' function_name: fib line: 22 }
.  .  .  .  .  .  .  .  int { value: '1' line: 22 }
.  .  .  .  .  function_call {  line: 22 }
.  .  .  .  .  .  id { value: 'fib' function_name: fib line: 22 }
.  .  .  .  .  .  actual_params {  line: 22 }
.  .  .  .  .  .  .  - {  expected_type: program line: 22 }
.  .  .  .  .  .  .  .  id { value: 'n' function_name: fib line: 22 }
.  .  .  .  .  .  .  .  int { value: '2' line: 22 }

------------------------------------

done!
¶[m                                                                                                                                                                                                                                                                                                                        ¶ [K
[?2004h]0;~/code/jay — fish[m[K[m~/code/jay [msemantic-checking
[m❯[m [Kee[mxport TERM=xterm-mono[21D[mxport TERM=xterm-mono[20D[m[1mex[mport TERM=xterm-mono[20D[m[1mi[m[Kexi[mt[mt[m[1mexit[m
[m[?2004l]0;jay: exit — exit[m[m[?2004l
Script done on 2020-03-27 15:29:08-0600
